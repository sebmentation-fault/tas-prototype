package events

var (
	// title, celeb, date, image url (default if blank)
	eventsInArea = [][]string{
		{"walk in park", "Alice P", "14 sep. 2024", "/static/images/walk.jpg"},
		{"Coffee break", "John Doe", "30 oct. 2024", "/static/images/cafe.jpg"},
		{"Event 4", "Celeb 4", "2 dec. 2024", ""},
	}

	// title, celeb, date, image url
	eventsFurtherAway = [][]string{
		{"beer time", "someone popular", "14 sep. 2024", "/static/images/pub.jpg"},
		{"discuss money making", "the ceo", "30 oct. 2024", ""},
		{"Event 4", "Celeb 4", "2 dec. 2024", ""},
		{"Event 6", "Celeb 5", "3 dec. 2024", ""},
	}

	// title, celeb, date, image url
	eventsLater = [][]string{
		{"book club", "a mum", "14 sep. 2024", ""},
		{"makeup tutorial", "makeup celeb", "30 oct. 2024", ""},
		{"Event 4", "Celeb 4", "2 dec. 2024", ""},
		{"Event 6", "Celeb 5", "3 dec. 2024", ""},
		{"Event 8", "Celeb 6", "4 dec. 2024", ""},
		{"Event 7", "Celeb 7", "5 dec. 2024", ""},
		{"Event 8", "Celeb 8", "6 dec. 2024", ""},
		{"Event 9", "Celeb 9", "7 dec. 2024", ""},
		{"Event 10", "Celeb 20", "2 dec. 2024", ""},
		{"Event 11", "Celeb 50", "3 dec. 2024", ""},
		{"Event 12", "Celeb 60", "4 dec. 2024", ""},
		{"Event 13", "Celeb 70", "5 dec. 2024", ""},
	}

	eventsList = []struct {
		title  string
		events [][]string
	}{
		{
			"Near you (soon!)",
			eventsInArea,
		},
		{
			"Events slightly further away",
			eventsFurtherAway,
		},
		{
			"Events happening later in your area",
			eventsLater,
		},
	}

	// caption, image url
	selfiesTaken = [...][]string{
		{"Got to take a selfie with my favourite celebrity!", ""},
		{"Met this lovely celeb and got to take a selfie with her!", "/static/images/walk.jpg"},
		{"Selfie #101 - so slay", ""},
		{"Yet another basic caption - still happy tho :)", ""},
		{"Had a pint with the one and only!", "/static/images/pub.jpg"},
	}
)

// This Tabs toggles either the events list or the global feed
templ Tabs() {
	<div role="tablist" class="tabs tabs-boxed *:w-fit justify-start bg-transparent">
		<script type="text/javascript">
		function changeActiveTab(clickedTab) {
			document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('tab-active'));
			clickedTab.classList.add('tab-active');
		}
	</script>
		<button
			role="tab"
			class="tab tab-active"
			onclick="changeActiveTab(this)"
			hx-trigger="click"
			hx-get="/dashboard/events"
			hx-swap="innerHTML"
			hx-target="#dashboard-content"
		>
			Dashboard
		</button>
		<button
			role="tab"
			class="tab"
			onclick="changeActiveTab(this)"
			hx-trigger="click"
			hx-get="/dashboard/selfies"
			hx-swap="innerHTML"
			hx-target="#dashboard-content"
		>
			Global Feed
		</button>
	</div>
}

// The templ showing a list of all the events that are nearby
templ Events() {
	<div id="dashboard-content">
		<h1 class="text-center font-bold text-5xl mb-10">Event Dashboard</h1>
		<ul>
			for _, eventSection := range eventsList {
				<li class="mb-8">
					<h2 class="text-3xl font-semibold text-left mb-4">{ eventSection.title }</h2>
					<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
						for _, event := range eventSection.events {
							@eventTempl(event)
						}
					</div>
				</li>
			}
		</ul>
	</div>
}

// The clickable button to go to the event
//
// TODO: link maps to '/event/{ event.GetId() }'
templ eventTempl(event []string) {
	<a class="card image-full w-32 md:w-52 xl:w-96 shadow-xl" href="/event">
		<figure>
			if len(event[3]) == 0 {
				<img src="/static/images/default.jpg" alt="Image for event"/>
			} else {
				<img src={ event[3] } alt="Image for event"/>
			}
		</figure>
		<div class="card-body">
			<h3 class="card-title">{ event[0] }</h3>
			<p class="text-xl">{ event[1] }</p>
			<p class="text-xl">{ event[2] }</p>
		</div>
	</a>
}

// The templ showing the most recent selfies taken
templ Feed() {
	<div id="dashboard-content">
		<h1 class="text-center font-bold text-5xl">Global Feed</h1>
		<div class="flex flex-col justify-center items-center min-h-screen mt-4">
			<ul class="space-y-4 mb-4">
				for _, selfie := range selfiesTaken {
					<li class="card bg-base-100 w-32 md:w-52 xl:w-96 shadow-xl">
						<figure>
							if len(selfie[1]) == 0 {
								<img src="/static/images/default.jpg" alt="Image of selfie"/>
							} else {
								<img src={ selfie[1] } alt="Image of selfie"/>
							}
						</figure>
						<div class="card-body">
							<h2 class="card-title">{ selfie[0] }</h2>
						</div>
					</li>
				}
				<!-- testing the skeleton feature here -->
				<li class="skeleton w-32 md:w-52 xl:w-96 h-24 md:h-32"></li>
				<li class="skeleton w-32 md:w-52 xl:w-96 h-24 md:h-32"></li>
				<li class="skeleton w-32 md:w-52 xl:w-96 h-24 md:h-32"></li>
			</ul>
			<button class="btn btn-primary">Load more</button>
		</div>
	</div>
}
