package events

import (
	"github.com/sebmentation-fault/tas-prototype/gohtmx-prototype/pkg/services/events"
)

var (
	// caption, image url
	selfiesTaken = [...][]string{
		{"Got to take a selfie with my favourite celebrity!", ""},
		{"Met this lovely celeb and got to take a selfie with her!", "/static/images/walk.jpg"},
		{"Selfie #101 - so slay", ""},
		{"Yet another basic caption - still happy tho :)", ""},
		{"Had a pint with the one and only!", "/static/images/pub.jpg"},
	}
)

// This Tabs toggles either the events list or the global feed
templ Tabs() {
	<div role="tablist" class="tabs tabs-boxed *:w-fit justify-start bg-transparent">
		<script type="text/javascript">
		function changeActiveTab(clickedTab) {
			document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('tab-active'));
			clickedTab.classList.add('tab-active');
		}
	</script>
		<button
			role="tab"
			class="tab tab-active"
			onclick="changeActiveTab(this)"
			hx-trigger="click"
			hx-get="/dashboard/events"
			hx-swap="innerHTML"
			hx-target="#dashboard-content"
		>
			Dashboard
		</button>
		<button
			role="tab"
			class="tab"
			onclick="changeActiveTab(this)"
			hx-trigger="click"
			hx-get="/dashboard/selfies"
			hx-swap="innerHTML"
			hx-target="#dashboard-content"
		>
			Global Feed
		</button>
	</div>
}

// The templ showing skeletons of the events so that they can be lazy loaded
// loaded :)
// Im so smart
templ Events() {
	<div
		id="dashboard-content"
		hx-get="/dashboard/event-sections"
		hx-trigger="load"
		hx-target="#event-sections"
		hx-swap="innerHTML"
	>
		<h1 class="text-center font-bold text-5xl mb-10">Event Dashboard</h1>
		<div id="event-sections">
			<ul>
				<li class="mb-8">
					<h2 class="skeleton h-12 w-52 mb-4"></h2>
					<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
					</div>
				</li>
				<li class="mb-8">
					<h2 class="skeleton h-12 w-52 mb-4"></h2>
					<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
						<div class="skeleton w-32 md:w-52 xl:w-96 h-40"></div>
					</div>
				</li>
			</ul>
		</div>
	</div>
}

// The templ showing a list of all the events that are nearby
templ EventsFilled(eventSections []events.EventSections) {
	<ul>
		for _, eventSection := range eventSections {
			<li class="mb-8">
				<h2 class="text-3xl font-semibold text-left mb-4">{ eventSection.Title }</h2>
				<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
					for _, event := range eventSection.Events {
						@eventTempl(event)
					}
				</div>
			</li>
		}
	</ul>
}

// The clickable button to go to the event
//
// TODO: link maps to '/event/{ event.GetId() }'
templ eventTempl(e events.Event) {
	<a class="card image-full w-32 md:w-52 xl:w-96 shadow-xl" href="/event">
		<figure>
			if len(e.Activity.ImageURL) == 0 {
				<img src="/static/images/default.jpg" alt="Image for event"/>
			} else {
				<img src={ e.Activity.ImageURL } alt="Image for event"/>
			}
		</figure>
		<div class="card-body">
			<h3 class="card-title">{ e.Title }</h3>
			<p class="text-xl">{ e.Celebrity.DisplayName }</p>
			<p class="text-xl">{ e.Activity.Name }</p>
		</div>
	</a>
}

// The templ showing the most recent selfies taken
templ Feed() {
	<div id="dashboard-content">
		<h1 class="text-center font-bold text-5xl">Global Feed</h1>
		<div class="flex flex-col justify-center items-center min-h-screen mt-4">
			<ul class="space-y-4 mb-4">
				for _, selfie := range selfiesTaken {
					<li class="card bg-base-100 w-32 md:w-52 xl:w-96 shadow-xl">
						<figure>
							if len(selfie[1]) == 0 {
								<img src="/static/images/default.jpg" alt="Image of selfie"/>
							} else {
								<img src={ selfie[1] } alt="Image of selfie"/>
							}
						</figure>
						<div class="card-body">
							<h2 class="card-title">{ selfie[0] }</h2>
						</div>
					</li>
				}
				<!-- testing the skeleton feature here -->
				<li class="skeleton w-32 md:w-52 xl:w-96 h-24 md:h-32"></li>
				<li class="skeleton w-32 md:w-52 xl:w-96 h-24 md:h-32"></li>
				<li class="skeleton w-32 md:w-52 xl:w-96 h-24 md:h-32"></li>
			</ul>
			<button class="btn btn-primary">Load more</button>
		</div>
	</div>
}
