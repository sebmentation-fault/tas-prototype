package signup

import "github.com/gofiber/fiber/v2"

// The signing up templ form
//
// NOTE: currently uses email/password, but requirements prefer phone auth
// (as would be harder to create fake accounts)
// using username/password just so is cheap and free
templ SignUpTempl() {
	<h1 class="text-4xl font-semibold text-center">Sign Up</h1>
	<div class="card">
		<div class="card-body items-center text-center">
			<h2 class="card-title">Create an account to use take-a-selfie</h2>
			<span id="spinner" class="htmx-indicator loading loading-spinner loading-sm md:loading-md xl:loading-xl"></span>
			<div id="form-response"></div>
			<form
				id="auth-form"
				hx-post="/auth/signup"
				hx-target="#form-response"
				hx-swap="innerHTML"
				hx-redirect="/dashboard"
				hx-indicator="#spinner"
				class="justify-center *:my-4"
			>
				@username()
				@email()
				@password()
				<div class="card-actions">
					@loginInstead()
					<button type="submit" class="btn btn-primary">Sign Up</button>
				</div>
			</form>
			<style type="text/css">
			.htmx-indicator {
				display: none;
				opacity: 0;
				transition: opacity 500ms ease-in;
			}

			.htmx-request .htmx-indicator {
				display: block;
				opacity: 1;
			}

			.htmx-request.htmx-indicator {
				display: block;
				opacity: 1;
			}
		</style>
		</div>
	</div>
}

templ ErrOnSignUp(err *fiber.Error) {
	<span class="text-error font-semibold">{ err.Message }</span>.
	if err.Code == fiber.StatusConflict {
		Account with that username/password already exists.
	} else if err.Code == fiber.StatusInternalServerError {
		Something went wrong internally.
	}
}

templ username() {
	<label class="input input-bordered flex items-center gap-2">
		<svg
			xmlns="http://www.w3.org/2000/svg"
			viewBox="0 0 16 16"
			fill="none"
			stroke="currentColor"
			stroke-width="2"
			stroke-linecap="round"
			stroke-linejoin="round"
			class="h-4 w-4 opacity-70"
		>
			<circle cx="8" cy="6" r="3"></circle>
			<path d="M2 14c1-2 3-3 6-3s5 1 6 3"></path>
		</svg>
		<input
			id="username"
			type="text"
			name="username"
			class="grow"
			placeholder="Username"
			required
			autocomplete="username"
		/>
	</label>
}

templ email() {
	<label class="input input-bordered flex items-center gap-2">
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="h-4 w-4 opacity-70">
			<path
				d="M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z"
			></path>
			<path
				d="M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z"
			></path>
		</svg>
		<input id="email" type="email" name="email" class="grow" placeholder="Email" required autocomplete="email"/>
	</label>
}

templ password() {
	<label class="input input-bordered flex items-center gap-2">
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="h-4 w-4 opacity-70">
			<path
				fill-rule="evenodd"
				d="M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z"
				clip-rule="evenodd"
			></path>
		</svg>
		<input
			id="password"
			type="password"
			name="password"
			class="grow"
			placeholder="Password"
			required
			autocomplete="new-password"
		/>
	</label>
}

templ loginInstead() {
	<button
		type="button"
		class="btn btn-neutral"
		hx-get="/auth/login"
		hx-trigger="click"
		hx-swap="innerHTML"
		hx-target="main"
	>
		Log in instead
	</button>
}
